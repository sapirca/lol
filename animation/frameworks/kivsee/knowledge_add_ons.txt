Restriction #1

The LED elements are connected to a power supply, so you must not use a brightness level higher than BRIGHTNESS_MAX. Exceeding this limit will cause the LED controller to crash. The permissible brightness levels are:

const OFF = 0.0
const LOW_BRIGHTNESS = 0.1
const MEDIUM_BRIGHTNESS = 0.3
const HIGH_BRIGHTNESS = 0.5
const BRIGHTNESS_MAX = 0.5

Restriction #2

If the saturation is below 0.7-0.8, the colors will appear dull and less vibrant. Use low saturation sparingly, mainly for creating moody or subdued animations. It is generally recommended to avoid using low saturation. 
const SATURATION_MAX = 1.0
const SATURATION_MIN = 0.8
const SATURATION_WHITE = 0.0

Restriction #3

Hue is represented as a floating-point number and is cyclic. This means that 0.0 is red, and 1.0 is also red. Similarly, 0.3 is green, and 1.3 is also green.
const HUE_START = 0.0 // Red
const HUE_GREEN = 0.3 // Green
const HUE_BLUE = 0.6 // Blue
const HUE_PURPLE = 0.8 // Purple
const HUE_RED = 1.0 // Red

Restriction #4
In the method
export const cycleBeats = (beatsInCycle: number, startBeat: number, endBeat: number, cb: Function) => ...
The first parameter `beatsInCycle` determines the number of beats after which the effect should repeat.
For example, if `beatsInCycle` is set to 4, the effect will repeat every 4 beats. 
In the `cycleBeats` function, `startBeat` and `endBeat` are relative to the defined cycle, so both should be less than `beatsInCycle`.


Knowledge #1: Colors
These constants are not defined in the system. If you want to use any constant, you should declare it at the top of the TypeScript file. 

Knowledge #2: Chains
The effects  are chains
First put beats
then put elements
the you must put coloring effect
You can add on, some relative effects, like brightness, or motions.

Knowledge #3: 
The relative effects are relative to the coloring values, 
e.g. if coloring effect brightness is 0.7 and the relative brighness end is 0.9 then the final brightness is will result in 0.7*0.9=0.56
fadeIn({ start: 0.1, end: 0.7 }); // Brightness increase multiplying the current brighness in 0.7


Mistakes learned from previous conversations: 

Lesson learned #1:
await is not required in TypeScript chained effects. The sequence is chronological and should be executed in order.

Lesson learned #2:
Each TypeScript animation should be wrapped with <animation> </animation> tags.

Note to user:
should add offsset

