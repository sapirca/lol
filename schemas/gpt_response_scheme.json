{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Animation JSON Schema",
    "description": "A schema for defining LED animations synchronized with music beats.",
    "type": "object",
    "properties": {
      "animation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The title of the song."
          },
          "duration": {
            "type": "number",
            "description": "The total length of the song in seconds."
          },
          "beats": {
            "type": "array",
            "description": "List of beat sections defining the animation.",
            "items": {
              "type": "object",
              "properties": {
                "beat_start": {
                  "type": "number",
                  "description": "The starting beat."
                },
                "beat_end": {
                  "type": "number",
                  "description": "The ending beat."
                },
                "elements": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12,
                        "description": "Element number between 1 and 12."
                      },
                      {
                        "type": "string",
                        "enum": ["all", "odd", "even", "left", "right", "center", "outer"],
                        "description": "Predefined element groups."
                      }
                    ]
                  },
                  "minItems": 1,
                  "description": "List of elements affected during this period. Must contain at least one element."
                },
                "mapping": {
                  "type": "string",
                  "enum": ["all", "centric", "updown", "arc", "ind", "b1", "b2"],
                  "description": "Defines the mapping pattern for the elements."
                },
                "coloring": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["constant", "rainbow"],
                      "description": "Defines if the coloring is constant or a rainbow effect."
                    },
                    "hue": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 360,
                      "description": "Hue value, mandatory if type is 'constant'."
                    }
                  },
                  "required": ["type"],
                  "if": { "properties": { "type": { "const": "constant" } } },
                  "then": { "required": ["hue"] }
                },
                "brightness": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["fadeIn", "fadeOut", "constant"],
                      "description": "Defines the brightness behavior."
                    },
                    "value": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "Brightness value, mandatory if type is 'constant'."
                    }
                  },
                  "if": { "properties": { "type": { "const": "constant" } } },
                  "then": { "required": ["value"] }
                },
                "motion": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["snake", "snakeInOut"],
                      "description": "Defines the motion type."
                    }
                  }
                }
              },
              "required": ["beat_start", "beat_end", "elements", "coloring"]
            }
          }
        },
        "required": ["name", "duration", "beats"]
      }
    }
  }
  